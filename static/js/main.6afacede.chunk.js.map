{"version":3,"sources":["components/sidebar-menu-item/Sidebar.component.jsx","components/menu-item/Navbar.component.jsx","components/Card-container/Cards.jsx","components/Card-container/card.container.jsx","App.js","serviceWorker.js","index.js"],"names":["Sidebar","props","className","tabIndex","onBlur","hideSide","href","Navbar","Toggle__sidebar","setState","prevState","showMenu","state","bind","onClick","this","Component","Cards","cardData","name","content","shiftCard","index","CardContainer","newArr","cards","temp","splice","localStorage","setItem","JSON","stringify","AddCard","prevCardsLength","length","newArrCon","arr","parse","getItem","localStorageData","map","item","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6afacede.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Sidebar.style.css\";\r\n\r\nconst Sidebar = props => (\r\n\t<div className=\"nav_container\">\r\n\t\t<div className=\"nav\" tabIndex=\"0\" onBlur={props.hideSide}>\r\n\t\t\t<ul className=\"nav__links\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#header\" className=\"nav__single-link\">\r\n\t\t\t\t\t\tHome\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#about\" className=\"nav__single-link\">\r\n\t\t\t\t\t\tAbout us\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#drink\" className=\"nav__single-link\">\r\n\t\t\t\t\t\tProjects\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#contact\" className=\"nav__single-link\">\r\n\t\t\t\t\t\tReach us\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport \"./Navbar.style.css\";\r\nimport Sidebar from \"../sidebar-menu-item/Sidebar.component\";\r\n\r\nclass Navbar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshowMenu: false\r\n\t\t};\r\n\t\tthis.Toggle__sidebar = this.Toggle__sidebar.bind(this);\r\n\t}\r\n\r\n\tToggle__sidebar = () => {\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn {\r\n\t\t\t\tshowMenu: !prevState.showMenu\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\thideSide = () => {\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn {\r\n\t\t\t\tshowMenu: !prevState.showMenu\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t<a href=\"#default\" className=\"logo\">\r\n\t\t\t\t\t\tProduct_Logo\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<div className=\"header-right\">\r\n\t\t\t\t\t\t<a href=\"#Nav1\">Nav1</a>\r\n\t\t\t\t\t\t<a href=\"#Nav2\">Nav2</a>\r\n\t\t\t\t\t\t<a href=\"#Nav3\">Nav3</a>\r\n\t\t\t\t\t\t<a href=\"#Nav4\">Nav4</a>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"sandwich__icon__container\"\r\n\t\t\t\t\t\t\tonClick={this.Toggle__sidebar}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"sandwich__icon\"></div>\r\n\t\t\t\t\t\t\t{this.state.showMenu && <Sidebar hideSide={this.hideSide} />}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"./cards.component.css\";\r\n\r\nclass Cards extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"card__parent\">\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"card__content\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<b>{this.props.cardData.name}</b>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p>{this.props.cardData.content}</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"prioritizeBtn\"\r\n\t\t\t\t\t\t\t\tonClick={() => this.props.shiftCard(this.props.index)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tPrioritize\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Cards;\r\n","import React, { Component } from \"react\";\r\nimport \"./CardContainer.style.css\";\r\nimport Cards from \"./Cards\";\r\n\r\nclass CardContainer extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcards: JSON.parse(localStorage.getItem(\"cardData\")) || [\r\n\t\t\t\t{ name: \"card1\", content: \"content 1\" },\r\n\t\t\t\t{ name: \"card2\", content: \"content 2\" },\r\n\t\t\t\t{ name: \"card3\", content: \"content 3\" },\r\n\t\t\t\t{ name: \"card4\", content: \"content 4\" }\r\n\t\t\t]\r\n\t\t};\r\n\t\tthis.shiftCard = this.shiftCard.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tlocalStorage.setItem(\"cardData\", JSON.stringify(this.state.cards));\r\n\t\tlet cards = localStorage.getItem(\"cardData\");\r\n\t\tlet localStorageData = JSON.parse(cards);\r\n\t\tthis.setState({ cards: localStorageData });\r\n\t}\r\n\r\n\tshiftCard = index => {\r\n\t\t// Prioritizing cards function\r\n\t\tlet newArr = [...this.state.cards];\r\n\t\tlet temp = newArr.splice(index, 1)[0];\r\n\t\tnewArr.splice(0, 0, temp);\r\n\t\tlocalStorage.setItem(\"cardData\", JSON.stringify(newArr));\r\n\t\tthis.setState({ cards: newArr });\r\n\t};\r\n\r\n\tAddCard = () => {\r\n\t\tlet prevCardsLength = this.state.cards.length;\r\n\t\tlet newArrCon = {\r\n\t\t\tname: \"card\" + (prevCardsLength + 1),\r\n\t\t\tcontent: \"content \" + (prevCardsLength + 1)\r\n\t\t};\r\n\t\tlet arr = [...this.state.cards, newArrCon]; // Concatenation of old card Obj and newly added Obj\r\n\t\tlocalStorage.setItem(\"cardData\", JSON.stringify(arr));\r\n\t\tthis.setState({ cards: arr });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"CardContainer\">\r\n\t\t\t\t<section className=\"CardStyle\">\r\n\t\t\t\t\t{this.state.cards.map((item, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Cards\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tcardData={item}\r\n\t\t\t\t\t\t\t\tshiftCard={this.shiftCard}\r\n\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</section>\r\n\t\t\t\t<button className=\"AddButton\" onClick={this.AddCard}>\r\n\t\t\t\t\t+\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CardContainer;\r\n","import React from \"react\";\nimport Navbar from \"../src/components/menu-item/Navbar.component\";\nimport CardContainer from \"../src/components/Card-container/card.container\";\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<Navbar />\n\t\t\t<CardContainer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}